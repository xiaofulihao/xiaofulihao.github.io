<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>记录</title>
  
  <subtitle>终于自己，热爱生活</subtitle>
  <link href="https://xiaofulihao.github.io/atom.xml" rel="self"/>
  
  <link href="https://xiaofulihao.github.io/"/>
  <updated>2023-11-23T11:21:17.871Z</updated>
  <id>https://xiaofulihao.github.io/</id>
  
  <author>
    <name>Oscar_慕泽</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python学习-字典</title>
    <link href="https://xiaofulihao.github.io/posts/e9379501.html"/>
    <id>https://xiaofulihao.github.io/posts/e9379501.html</id>
    <published>2023-11-23T10:57:39.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python字典是一种无序、可变、有键的数据结构。它是一个键值对的集合，每个键都唯一且不可变，与每个键关联的值可以是任何数据类型（包括整数、字符串、列表、甚至其他字典）</span><br></pre></td></tr></table></figure><h1 id="创建字典"><a href="#创建字典" class="headerlink" title="创建字典"></a>创建字典</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 1.直接创建</span><br><span class="line">dict1 = &#123;&#x27;name&#x27;:&#x27;jack&#x27;,&#x27;age&#x27;:20&#125;</span><br><span class="line"></span><br><span class="line"># 2. 函数创建</span><br><span class="line">dict2 = dict(&#123;&#x27;name&#x27;:&#x27;jack&#x27;,&#x27;age&#x27;:20&#125;)</span><br></pre></td></tr></table></figure><h1 id="访问字典"><a href="#访问字典" class="headerlink" title="访问字典"></a>访问字典</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 1.通过键访问</span><br><span class="line">print (dict1[&#x27;name&#x27;])</span><br><span class="line"></span><br><span class="line"># 2.get函数(key)</span><br><span class="line">print (dict1.get(&#x27;age&#x27;))</span><br><span class="line"></span><br><span class="line"># 3.内置方法 keys() values() items()</span><br><span class="line">print (dict1.keys())        # 返回全部值</span><br><span class="line">print (dict1.values())      # 返回全部键</span><br><span class="line">print (dict1.items())       # 返回全部键与值</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0C4Om.png" alt="运行结果"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 4. 循环访问</span><br><span class="line">for key in dict1:</span><br><span class="line">    print (key)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0CbRT.png" alt="运行结果"></p><h1 id="字典元素的修改"><a href="#字典元素的修改" class="headerlink" title="字典元素的修改"></a>字典元素的修改</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 增加|修改</span><br><span class="line">dict1[&#x27;demo&#x27;] = 1</span><br><span class="line">print (dict1)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0COrS.png" alt="运行结果"></p><h3 id="键如果不存在则添加-键如果存在则修改"><a href="#键如果不存在则添加-键如果存在则修改" class="headerlink" title="键如果不存在则添加,键如果存在则修改"></a><em>键如果不存在则添加,键如果存在则修改</em></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dict1[&#x27;demo&#x27;] = 1</span><br><span class="line">print (dict1)</span><br><span class="line">dict1[&#x27;demo&#x27;] = 2</span><br><span class="line">print (dict1)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0Gmot.png" alt="运行结果"></p><h1 id="字典的删除"><a href="#字典的删除" class="headerlink" title="字典的删除"></a>字典的删除</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 1.删除指定的键与值 .pop() 返回的是删除的值</span><br><span class="line">print (dict1.pop(&#x27;demo&#x27;))</span><br><span class="line">print (dict1)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0Gtpv.png" alt="运行结果"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 2.删除随机元素</span><br><span class="line">print (dict1.popitem())</span><br><span class="line">print (dict1)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0GLmY.png" alt="运行结果"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 3.清空字典</span><br><span class="line">print (dict1.clear())</span><br><span class="line">print (dict1)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0GSd9.png" alt="运行结果"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;字典&quot;&gt;&lt;a href=&quot;#字典&quot; class=&quot;headerlink&quot; title=&quot;字典&quot;&gt;&lt;/a&gt;字典&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL学习—多表查询</title>
    <link href="https://xiaofulihao.github.io/posts/31e40c5e.html"/>
    <id>https://xiaofulihao.github.io/posts/31e40c5e.html</id>
    <published>2023-11-22T15:45:09.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多表查询中-每张表一定会存在一定的联系在联系关系中-一对一有公用的唯一主键一对多中-外键填在多的一方多对多中-两张表的主键共同做为外键"><a href="#多表查询中-每张表一定会存在一定的联系在联系关系中-一对一有公用的唯一主键一对多中-外键填在多的一方多对多中-两张表的主键共同做为外键" class="headerlink" title="多表查询中,每张表一定会存在一定的联系在联系关系中:一对一有公用的唯一主键一对多中,外键填在多的一方多对多中,两张表的主键共同做为外键"></a>多表查询中,每张表一定会存在一定的联系<br>在联系关系中:<br>一对一有公用的唯一主键<br>一对多中,外键填在多的一方<br>多对多中,两张表的主键共同做为外键</h1><h1 id="多表查询的类型"><a href="#多表查询的类型" class="headerlink" title="多表查询的类型"></a>多表查询的类型</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">子查询          # IN</span><br><span class="line">内连接</span><br><span class="line">外连接</span><br><span class="line">自连接</span><br><span class="line">联合查询</span><br></pre></td></tr></table></figure><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(条件表达式) [NOT]IN [字段]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">子查询可以嵌套</span><br><span class="line"></span><br><span class="line">SELECT * FROM members </span><br><span class="line">WHERE `用户号` IN (</span><br><span class="line">SELECT `用户号` FROM sell </span><br><span class="line">WHERE `图书编号` NOT IN (</span><br><span class="line">SELECT `图书编号` FROM book</span><br><span class="line">WHERE `书名` = &#x27;网页程序设计&#x27;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/22/owVyrT.png" alt="运行结果"></p><h4 id="比较子查询"><a href="#比较子查询" class="headerlink" title="比较子查询"></a>比较子查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[(比较运算符)] [ANY|ALL|SOME]</span><br><span class="line"># ANY (表示满足子查询结果中的任意一个值的条件，相当于逻辑或（OR）)</span><br><span class="line"># ALL (表示满足子查询结果中的所有值的条件，相当于逻辑与（AND）)</span><br><span class="line"># SOME (和ANY是等价的，可以互换使用)</span><br><span class="line"></span><br><span class="line">ANY和ALL的使用要注意子查询的结果集是否为空，如果为空，那么ANY和ALL的结果都是FALSE。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM members </span><br><span class="line">WHERE `用户号` = ANY (</span><br><span class="line">SELECT `用户号` FROM sell </span><br><span class="line">WHERE `图书编号` = &#x27;TP.2525&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT * FROM book </span><br><span class="line">WHERE `单价` &gt; ALL (</span><br><span class="line">SELECT `单价` FROM book </span><br><span class="line">WHERE `书名` = &#x27;网页程序设计&#x27;)</span><br></pre></td></tr></table></figure><p>观察运行结果:<br><img src="https://vip.helloimg.com/images/2023/11/22/owYzob.png" alt="结果一"><br><img src="https://vip.helloimg.com/images/2023/11/22/owY7io.png" alt="结果二"></p><hr><h1 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT语句1</span><br><span class="line">UNION|UNION ALL</span><br><span class="line">SELECT语句2</span><br><span class="line"></span><br><span class="line">UNION # 去重</span><br><span class="line">UNION ALL # 全部列出</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM sell</span><br><span class="line">WHERE `用户号` = &#x27;C0138&#x27;</span><br><span class="line">UNION </span><br><span class="line">SELECT * FROM sell </span><br><span class="line">WHERE`图书编号` = &#x27;TP.2525&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/22/owYfoY.png" alt="运行结果"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;多表查询中-每张表一定会存在一定的联系在联系关系中-一对一有公用的唯一主键一对多中-外键填在多的一方多对多中-两张表的主键共同做为外键&quot;&gt;&lt;a href=&quot;#多表查询中-每张表一定会存在一定的联系在联系关系中-一对一有公用的唯一主键一对多中-外键填在多的一方多对多</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python学习_函数</title>
    <link href="https://xiaofulihao.github.io/posts/906108c6.html"/>
    <id>https://xiaofulihao.github.io/posts/906108c6.html</id>
    <published>2023-11-16T11:01:27.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-函数的定义与调用"><a href="#1-函数的定义与调用" class="headerlink" title="1.函数的定义与调用"></a>1.函数的定义与调用</h3><h4 id="def可以定义函数格式"><a href="#def可以定义函数格式" class="headerlink" title="def可以定义函数格式:"></a>def可以定义函数<br>格式:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def 函数名 (参数列表)</span><br><span class="line">    函数体</span><br></pre></td></tr></table></figure><h5 id="如"><a href="#如" class="headerlink" title="如:"></a>如:</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def HelloWord ():</span><br><span class="line">    print (&#x27;你好世界&#x27;)</span><br><span class="line"></span><br><span class="line">HelloWord()     # 调用函数</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/16/ovdYyh.png" alt="运行结果"></p><h4 id="对函数的参数进行定义"><a href="#对函数的参数进行定义" class="headerlink" title="对函数的参数进行定义"></a>对函数的参数进行定义</h4><h5 id="有返回值的函数-必须用一个变量来储存"><a href="#有返回值的函数-必须用一个变量来储存" class="headerlink" title="(有返回值的函数,必须用一个变量来储存)"></a>(有返回值的函数,必须用一个变量来储存)</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def HelloWord (a,b):</span><br><span class="line">    print (a+b)</span><br><span class="line"></span><br><span class="line">HelloWord(&#x27;你好&#x27;,&#x27;Python&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/16/ovdjdq.png" alt="运行结果"></p><h4 id="参数的默认值也可以用-定义"><a href="#参数的默认值也可以用-定义" class="headerlink" title="参数的默认值也可以用&#x3D;定义"></a>参数的默认值也可以用&#x3D;定义</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def HelloWord (b,a = &#x27;你好&#x27;):       # 设置默认参数时,一定要保证被设置的默认参数在最后面,否则会保错</span><br><span class="line">    print (a + b)</span><br><span class="line"></span><br><span class="line">HelloWord(b=&#x27;Python&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/16/ovvB21.png" alt="报错运行结果"><br><img src="https://vip.helloimg.com/images/2023/11/16/ovvC8K.png" alt="正确运行结果"></p><h4 id="可变参数与关键字参数"><a href="#可变参数与关键字参数" class="headerlink" title="可变参数与关键字参数"></a>可变参数与关键字参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">可能会出现声明多个参数的情况</span><br><span class="line">这种需要可变参数进行保存</span><br><span class="line"></span><br><span class="line">&#x27;*&#x27;存放未命名的变量参数,类型为&#x27;元组&#x27;（可变参数）</span><br><span class="line">&#x27;**&#x27;存放命名的变量参数,类型为&#x27;字典&#x27;（关键字参数）</span><br><span class="line"></span><br><span class="line">def demo01 (a,b,*c,**d):            </span><br><span class="line">    print (a)</span><br><span class="line">    print (b)</span><br><span class="line">    print (c)</span><br><span class="line">    print (d)</span><br><span class="line">demo01(1,2,3,4,5,6,7)</span><br><span class="line">print(&#x27;-&#x27;*25)</span><br><span class="line">demo01 (1,2,test01=3,test02=4,test03=5,test04=6,test=7)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/16/ovv3Yt.png" alt="运行结果"></p><h3 id="函数的四大类型"><a href="#函数的四大类型" class="headerlink" title="函数的四大类型"></a>函数的四大类型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">•  无参数，无返回值的函数：这种函数不能接收参数，也没有返回值，一般用来执行一些简单的操作，例如打印信息，显示菜单等。例如：</span><br><span class="line"></span><br><span class="line">def hello():</span><br><span class="line">    print(&quot;Hello, world!&quot;)</span><br><span class="line"></span><br><span class="line">•  无参数，有返回值的函数：这种函数不能接收参数，但是可以返回一个或多个值，一般用来获取一些固定的数据，例如常量，随机数等。例如：</span><br><span class="line"></span><br><span class="line">def get_pi():</span><br><span class="line">    return 3.1415926</span><br><span class="line"></span><br><span class="line">•  有参数，无返回值的函数：这种函数可以接收一个或多个参数，但是没有返回值，一般用来对参数进行一些处理，例如修改，验证，输出等。例如：</span><br><span class="line"></span><br><span class="line">def add(x, y):</span><br><span class="line">    print(x + y)</span><br><span class="line"></span><br><span class="line">•  有参数，有返回值的函数：这种函数可以接收一个或多个参数，也可以返回一个或多个值，一般用来对参数进行一些计算，转换，筛选等，并返回结果。例如：</span><br><span class="line"></span><br><span class="line">def max(x, y):</span><br><span class="line">    if x &gt; y:</span><br><span class="line">        return x</span><br><span class="line">    else:</span><br><span class="line">        eturn y</span><br></pre></td></tr></table></figure><h1 id="返回值-return"><a href="#返回值-return" class="headerlink" title="返回值 (return)"></a>返回值 (return)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">return的作用是从函数中返回一个或多个值，</span><br><span class="line">结束函数的执行</span><br><span class="line">将返回值传递给函数的调用者</span><br><span class="line">return语句可以让函数具有输出结果的能力，</span><br><span class="line">也可以让函数返回不同的值来实现不同的逻辑分支。</span><br></pre></td></tr></table></figure><h1 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">指变量在函数内部或外部可以被访问和使用的范围。</span><br><span class="line">Python函数中变量的作用域可以分为四种:</span><br><span class="line">局部作用域（Local）</span><br><span class="line">嵌套作用域（Enclosing）</span><br><span class="line">全局作用域（Global）</span><br><span class="line">内置作用域（Built-in）</span><br></pre></td></tr></table></figure><h4 id="局部作用域（Local）"><a href="#局部作用域（Local）" class="headerlink" title="局部作用域（Local）"></a>局部作用域（Local）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">函数内部定义的变量的作用域，它只能在函数内部使用，不能在函数外部访问。</span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">def myfunc():</span><br><span class="line">    x = 10 # x是局部变量</span><br><span class="line">    print(x) # 可以在函数内部访问x</span><br><span class="line"></span><br><span class="line">myfunc()</span><br><span class="line"># print(x) # 不能在函数外部访问x，会报错</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0aLsn.png" alt="运行结果"></p><h4 id="嵌套作用域（Enclosing）"><a href="#嵌套作用域（Enclosing）" class="headerlink" title="嵌套作用域（Enclosing）"></a>嵌套作用域（Enclosing）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">在嵌套的函数中定义的变量的作用域，它可以在嵌套的函数内部使用，</span><br><span class="line">也可以在包含它的外层函数中使用，但不能在全局作用域中访问。</span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">def outer():</span><br><span class="line">    x = 10 # x是嵌套变量</span><br><span class="line">    def inner():</span><br><span class="line">        print(x) # 可以在内层函数中访问x</span><br><span class="line">    inner()</span><br><span class="line">    print(x) # 可以在外层函数中访问x</span><br><span class="line"></span><br><span class="line">outer()</span><br><span class="line"># print(x) # 不能在全局作用域中访问x，会报错</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0aiYz.png" alt="运行结果"></p><h4 id="全局作用域（Global）"><a href="#全局作用域（Global）" class="headerlink" title="全局作用域（Global）"></a>全局作用域（Global）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在模块或文件顶层定义的变量的作用域，</span><br><span class="line">它可以在任何地方使用，包括函数内部。</span><br><span class="line">但是，如果在函数内部想要修改全局变量的值，</span><br><span class="line">需要使用global关键字来声明。</span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">x = 10 # x是全局变量</span><br><span class="line"></span><br><span class="line">def myfunc():</span><br><span class="line">    global x # 声明x是全局变量</span><br><span class="line">    x = 20 # 修改全局变量的值</span><br><span class="line">    print(x) # 可以在函数内部访问x</span><br><span class="line"></span><br><span class="line">myfunc()</span><br><span class="line">print(x) # 可以在函数外部访问x</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0aHeA.png" alt="运行结果"></p><h4 id="内置作用域（Built-in）"><a href="#内置作用域（Built-in）" class="headerlink" title="内置作用域（Built-in）"></a>内置作用域（Built-in）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Python内置的一些变量和函数的作用域，</span><br><span class="line">它们可以在任何地方使用，包括函数内部。</span><br><span class="line">例如，int, str, print, len等都是内置的变量和函数。</span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">def myfunc():</span><br><span class="line">    x = int(&quot;10&quot;) # 可以在函数内部使用内置的int函数</span><br><span class="line">    print(x) # 可以在函数内部使用内置的print函数</span><br><span class="line"></span><br><span class="line">myfunc()</span><br><span class="line">y = str(10) # 可以在函数外部使用内置的str函数</span><br><span class="line">print(y) # 可以在函数外部使用内置的print函数</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/23/o0abT5.png" alt="运行结果"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-函数的定义与调用&quot;&gt;&lt;a href=&quot;#1-函数的定义与调用&quot; class=&quot;headerlink&quot; title=&quot;1.函数的定义与调用&quot;&gt;&lt;/a&gt;1.函数的定义与调用&lt;/h3&gt;&lt;h4 id=&quot;def可以定义函数格式&quot;&gt;&lt;a href=&quot;#def可以定义函数格</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python学习_元组与集合</title>
    <link href="https://xiaofulihao.github.io/posts/d124439a.html"/>
    <id>https://xiaofulihao.github.io/posts/d124439a.html</id>
    <published>2023-11-16T10:57:24.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-元组的定义"><a href="#1-元组的定义" class="headerlink" title="1.元组的定义"></a>1.元组的定义</h3><h4 id="元组不可改变类型-不支持增-删-排序-用-包围"><a href="#元组不可改变类型-不支持增-删-排序-用-包围" class="headerlink" title="元组不可改变类型,不支持增,删,排序,用()包围"></a>元组不可改变类型,不支持增,删,排序,用()包围</h4><h3 id="创建元组"><a href="#创建元组" class="headerlink" title="创建元组"></a>创建元组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 直接创建</span><br><span class="line">t1 = ()</span><br><span class="line">t2 = (1,)       # 元组中只有一个元素时,‘,’不可省略</span><br><span class="line">t3 = (1,&#x27;c&#x27;,(2,3,4))        # 元组可嵌套</span><br><span class="line"></span><br><span class="line"># 函数创建</span><br><span class="line">t1 = tuple()</span><br><span class="line">t2 = tuple(&#x27;Python&#x27;)</span><br><span class="line">t3 = tuple(range(4))        # 可支持函数</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="访问元组"><a href="#访问元组" class="headerlink" title="访问元组"></a>访问元组</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">t1 = tupe(&#x27;python&#x27;)     # 创建一个元组</span><br><span class="line">print (t1[1])           # 遵循index</span><br><span class="line">print (t1[2:5])         # 支持切片</span><br><span class="line">for i in t1:</span><br><span class="line">    print(i)            # 支持遍历</span><br></pre></td></tr></table></figure><h3 id="2-集合的定义"><a href="#2-集合的定义" class="headerlink" title="2.集合的定义"></a>2.集合的定义</h3><h4 id="集合的元素是无序且唯一的-用-包围"><a href="#集合的元素是无序且唯一的-用-包围" class="headerlink" title="集合的元素是无序且唯一的,用{}包围"></a>集合的元素是无序且唯一的,用{}包围</h4><h3 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 直接创建</span><br><span class="line">set1 = &#123;&#125;</span><br><span class="line"></span><br><span class="line"># 函数创建</span><br><span class="line">set2 = set(&#123;1,2,3&#125;)</span><br></pre></td></tr></table></figure><h3 id="集合常见操作"><a href="#集合常见操作" class="headerlink" title="集合常见操作"></a>集合常见操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 增加</span><br><span class="line">.app()      # 参数为增加的数据</span><br><span class="line"></span><br><span class="line"># 移除</span><br><span class="line">.remove()   # 参数为移除的数据</span><br><span class="line"></span><br><span class="line"># 删除</span><br><span class="line">.discard()  # 删除元素,如果集合不存在改元素,也不报错</span><br><span class="line"></span><br><span class="line"># 清除</span><br><span class="line">.clear      # 清除所有元素</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-元组的定义&quot;&gt;&lt;a href=&quot;#1-元组的定义&quot; class=&quot;headerlink&quot; title=&quot;1.元组的定义&quot;&gt;&lt;/a&gt;1.元组的定义&lt;/h3&gt;&lt;h4 id=&quot;元组不可改变类型-不支持增-删-排序-用-包围&quot;&gt;&lt;a href=&quot;#元组不可改变类型-不</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python学习_列表</title>
    <link href="https://xiaofulihao.github.io/posts/940e0dd9.html"/>
    <id>https://xiaofulihao.github.io/posts/940e0dd9.html</id>
    <published>2023-11-13T14:23:21.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-组合数据类型"><a href="#1-组合数据类型" class="headerlink" title="1.组合数据类型"></a>1.组合数据类型</h1><h3 id="list–列表"><a href="#list–列表" class="headerlink" title="list–列表"></a>list–列表</h3><h4 id="list没有长度限制-可以包含任意元素-用-包裹"><a href="#list没有长度限制-可以包含任意元素-用-包裹" class="headerlink" title="list没有长度限制,可以包含任意元素,用[]包裹"></a>list没有长度限制,可以包含任意元素,用[]包裹</h4><h3 id="创建list的方法"><a href="#创建list的方法" class="headerlink" title="创建list的方法"></a>创建list的方法</h3><p>方法一:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list = []        # 创建空列表</span><br><span class="line">list = [数据1,数据2,...,数据N]</span><br></pre></td></tr></table></figure><p>方法二:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list = list(数据1,数据2,...,数据N)</span><br></pre></td></tr></table></figure><h3 id="访问list元素"><a href="#访问list元素" class="headerlink" title="访问list元素"></a>访问list元素</h3><p>方法一:index访问,支持双向索引,正向从0开始,反向从-1开始</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list = [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;]</span><br><span class="line">print (list[2])  # 正向索引</span><br><span class="line">print (list[-2]) # 反向索引</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/odh7NM.png" alt="运行结果"></p><p>方法二:切片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">list = [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;]</span><br><span class="line">print (list[0:5:3])     #</span><br><span class="line">print (list[2:])        #从index为2开始,到末尾</span><br><span class="line">print (list[:3])        #从开头开始切,到index为3结束,不包含index3</span><br><span class="line">print (list[:])         #将所有元素全部输出</span><br><span class="line">print (list[:-1])       #从开头开始切,到index为-1结束,不包含index-1</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/odj5Or.png" alt="运行结果"></p><p>方法三:编历(只能依次访问)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list = [&#x27;Java&#x27;,&#x27;A&#x27;,&#x27;3&#x27;,&#x27;Python&#x27;,&#x27;C++&#x27;,&#x27;1&#x27;,&#x27;2&#x27;]</span><br><span class="line">for i in list :</span><br><span class="line">    print (i)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/odyCDb.png" alt="运行结果"></p><h3 id="添加列表元素"><a href="#添加列表元素" class="headerlink" title="添加列表元素"></a>添加列表元素</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.append()           # 在尾部添加一个新的数据,只占用一个索引位</span><br><span class="line">.extend()           # 在尾部添加一个新的列表,并将列表中的元素追加进来(与+=效果相同)</span><br><span class="line">.insert()           # 在指定位置添加</span><br></pre></td></tr></table></figure><h4 id="append"><a href="#append" class="headerlink" title=".append()"></a>.append()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">list = [&#x27;demo1&#x27;,&#x27;demo2&#x27;,&#x27;demo3&#x27;,&#x27;demo4&#x27;,&#x27;demo5&#x27;]</span><br><span class="line">list.append(&#x27;ADD_1&#x27;)</span><br><span class="line">print (list)</span><br><span class="line">print (list[5])</span><br><span class="line">list.append([&#x27;ADD_2&#x27;,&#x27;ADD_3&#x27;,&#x27;ADD_4&#x27;])</span><br><span class="line">print (list[6])</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/odyaxQ.png" alt="运行结果"></p><h4 id="extend"><a href="#extend" class="headerlink" title=".extend()"></a>.extend()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list = [&#x27;demo1&#x27;,&#x27;demo2&#x27;,&#x27;demo3&#x27;,&#x27;demo4&#x27;,&#x27;demo5&#x27;]</span><br><span class="line">list.extend([&#x27;ADD_1&#x27;,5,&#x27;ADD_2&#x27;])</span><br><span class="line">print (list[5])</span><br><span class="line">print (list[7])</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/ody19t.png" alt="运行结果"></p><h4 id="insert"><a href="#insert" class="headerlink" title=".insert()"></a>.insert()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list = [&#x27;demo1&#x27;,&#x27;demo2&#x27;,&#x27;demo3&#x27;,&#x27;demo4&#x27;,&#x27;demo5&#x27;]</span><br><span class="line">list.insert(1,&#x27;ADD1&#x27;)</span><br><span class="line">print (list)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/ody3gu.png" alt="运行结果"></p><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.sort()             # 排序后,将排序后的数据覆盖旧数据的列表(列表数据不能混搭)</span><br><span class="line">.sorted()           # 排序后,将排序后的数据存在另一个表</span><br><span class="line">.reverse()          # 将表中数据反向,排序后新数据覆盖旧数据</span><br></pre></td></tr></table></figure><h4 id="sort"><a href="#sort" class="headerlink" title=".sort()"></a>.sort()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list = [1,5,6,2,4,0]</span><br><span class="line">print (list)</span><br><span class="line">list.sort()</span><br><span class="line">print (list)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/odyqbE.png" alt="运行结果"></p><h4 id="sorted"><a href="#sorted" class="headerlink" title=".sorted"></a>.sorted</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list = [1,5,6,2,4,0]</span><br><span class="line">list1 = sorted(list)</span><br><span class="line">print (list)</span><br><span class="line">print (list1)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/odyJG9.png" alt="运行结果"></p><h4 id="reverse"><a href="#reverse" class="headerlink" title=".reverse"></a>.reverse</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list = [1,5,6,2,4,0]</span><br><span class="line">list.reverse()</span><br><span class="line">print (list)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/odymAX.png" alt="运行结果"></p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">del 列表名[]                 # 删除列表中指定位置(知道位置)的元素,也可以删除整个表(index值)</span><br><span class="line">.remove()                   # 移除表中匹配到的第一个元素</span><br><span class="line">.pop()                      # 消除表中的一个数据,没有规定具体数据,则删除最后一个元素(index值)</span><br><span class="line">.clear()                    # 清空列表</span><br></pre></td></tr></table></figure><p>运行实例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">list = [1,5,5,6,2,4,0,3,3]</span><br><span class="line">print (list)</span><br><span class="line">del list[2]</span><br><span class="line">print (list)</span><br><span class="line">list.remove (3)</span><br><span class="line">print (list)</span><br><span class="line">list.pop()</span><br><span class="line">print (list)</span><br><span class="line">list.pop(5)</span><br><span class="line">print (list)</span><br><span class="line">list.clear()</span><br><span class="line">print (list)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/16/ovdQQg.png" alt="运行结果"></p><h3 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[exp for x in list]</span><br><span class="line">表达式exp和for循环组成</span><br><span class="line">for用来遍历</span><br><span class="line">exp 对每层循环的列表元素进行运算</span><br></pre></td></tr></table></figure><h3 id="如"><a href="#如" class="headerlink" title="如:"></a>如:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list = [1,3,5,7,9]</span><br><span class="line">list1 = [i * i for i in list]</span><br><span class="line">print (list1)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/16/ovvRob.png" alt="运行结果"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">score = [44,59,67,89,12,32,80,75]</span><br><span class="line">Is = [i for i in score if i &lt; 60]</span><br><span class="line">print (Is)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/16/ovvP5S.png" alt="运行结果"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-组合数据类型&quot;&gt;&lt;a href=&quot;#1-组合数据类型&quot; class=&quot;headerlink&quot; title=&quot;1.组合数据类型&quot;&gt;&lt;/a&gt;1.组合数据类型&lt;/h1&gt;&lt;h3 id=&quot;list–列表&quot;&gt;&lt;a href=&quot;#list–列表&quot; class=&quot;header</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python学习02</title>
    <link href="https://xiaofulihao.github.io/posts/e3093d4f.html"/>
    <id>https://xiaofulihao.github.io/posts/e3093d4f.html</id>
    <published>2023-11-06T14:12:32.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-字符串"><a href="#1-字符串" class="headerlink" title="1.字符串"></a>1.字符串</h1><h3 id="定义-由单，双，三引号包围的字符"><a href="#定义-由单，双，三引号包围的字符" class="headerlink" title="定义:由单，双，三引号包围的字符"></a>定义:由单，双，三引号包围的字符</h3><hr><h1 id="2-转义字符"><a href="#2-转义字符" class="headerlink" title="2.转义字符"></a>2.转义字符</h1><h4 id="由-和具有特殊意义的字符组成"><a href="#由-和具有特殊意义的字符组成" class="headerlink" title="由 * \ *和具有特殊意义的字符组成"></a>由 * \ *和具有特殊意义的字符组成</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">常用转义字符</span><br><span class="line">\b      # 退格</span><br><span class="line">\n      # 换行</span><br><span class="line">\r      # 回车</span><br><span class="line">\t      # 制表(相当于TAB)</span><br><span class="line">\&#x27;      # 输出&#x27;</span><br></pre></td></tr></table></figure><hr><h1 id="3-格式化字符"><a href="#3-格式化字符" class="headerlink" title="3.格式化字符"></a>3.格式化字符</h1><h4 id="python内置格式化字符’-’"><a href="#python内置格式化字符’-’" class="headerlink" title="python内置格式化字符’%’"></a>python内置格式化字符’%’</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">常用格式符</span><br><span class="line">%s      # 转为字符串</span><br><span class="line">%d      # 转为整形</span><br><span class="line">%f      # 转为浮点数</span><br></pre></td></tr></table></figure><h2 id="实列"><a href="#实列" class="headerlink" title="实列:"></a>实列:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = &#x27;王登节&#x27;</span><br><span class="line">print (&#x27;我不是%s&#x27;%a)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/06/ocqAuT.png" alt="运行结果"></p><h3 id="format-格式化字符串"><a href="#format-格式化字符串" class="headerlink" title="format()格式化字符串"></a>format()格式化字符串</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = &#x27;王书浩&#x27;</span><br><span class="line">b = 18</span><br><span class="line">print (&#x27;我叫&#123;&#125;,今年&#123;&#125;&#x27;.format(a,b))</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/06/ocqTZC.png" alt="运行结果"></p><h3 id="f-string"><a href="#f-string" class="headerlink" title="f-string"></a>f-string</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = &#x27;王书浩&#x27;</span><br><span class="line">b = 18</span><br><span class="line">print (f&#x27;我叫&#123;a&#125;,今年&#123;b&#125;&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/06/ocq9Qt.png" alt="运行结果"></p><hr><h1 id="4-字符串常见函数"><a href="#4-字符串常见函数" class="headerlink" title="4.字符串常见函数"></a>4.字符串常见函数</h1><h4 id="函数格式"><a href="#函数格式" class="headerlink" title="函数格式"></a>函数格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名 (参数)       # 如range(0.10.1)</span><br></pre></td></tr></table></figure><h2 id="常用的函数"><a href="#常用的函数" class="headerlink" title="常用的函数"></a>常用的函数</h2><h4 id="查找–find"><a href="#查找–find" class="headerlink" title="查找–find()"></a>查找–find()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.find(子串,起点,结束)   #返回的是index(索引)的值</span><br><span class="line">                       #如果返回的为-则没有</span><br></pre></td></tr></table></figure><h3 id="实列-1"><a href="#实列-1" class="headerlink" title="实列"></a>实列</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">A = &#x27;y&#x27;</span><br><span class="line">B = &#x27;a&#x27;</span><br><span class="line">C = &#x27;python&#x27;</span><br><span class="line">D = C.find(A)</span><br><span class="line">E = C.find(B)</span><br><span class="line">F = C.find(&#x27;n&#x27;)</span><br><span class="line">print(D)</span><br><span class="line">print(E)</span><br><span class="line">print(F)</span><br><span class="line">G = C.find(A,3)     # 表示从index值为3开始查找</span><br><span class="line">print(G)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/06/ocq6yn.png" alt="运行结果"></p><h4 id="替换–replace"><a href="#替换–replace" class="headerlink" title="替换–replace()"></a>替换–replace()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.replace(旧字符,新字符,替换次数(默认全部))</span><br></pre></td></tr></table></figure><h3 id="实列-2"><a href="#实列-2" class="headerlink" title="实列:"></a>实列:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A = &#x27;北京欢迎你&#x27;</span><br><span class="line">B = A.replace(&#x27;北京&#x27;,&#x27;成都&#x27;)</span><br><span class="line">print (B)</span><br><span class="line">C = &#x27;全国计算机等级考试&#x27;</span><br><span class="line">D = C.replace(&#x27;计算机&#x27;,&#x27;大学英语&#x27;)</span><br><span class="line">print (D)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/06/ocqrX5.png" alt="运行结果"></p><h4 id="字符串分割–split"><a href="#字符串分割–split" class="headerlink" title="字符串分割–split()"></a>字符串分割–split()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.split(分割符(默认空字符),分割次数(默认-1))</span><br></pre></td></tr></table></figure><h3 id="实列-3"><a href="#实列-3" class="headerlink" title="实列:"></a>实列:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str1 = &#x27;北京,成都,上海,广州,湖南&#x27;</span><br><span class="line">print (str1)</span><br><span class="line">print (str1.split())</span><br><span class="line">print (str1.split(&#x27;,&#x27;))</span><br><span class="line">print (str1.split (&#x27;,&#x27;,2))</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/09/odLGPR.png" alt="运行结果"></p><h4 id="字符串拼接–join"><a href="#字符串拼接–join" class="headerlink" title="字符串拼接–join()"></a>字符串拼接–join()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.join(连接的字符串)</span><br></pre></td></tr></table></figure><h3 id="实列-4"><a href="#实列-4" class="headerlink" title="实列:"></a>实列:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str1 = &#x27;hello&#x27;</span><br><span class="line">print (&#x27;_&#x27;.join(str1))</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/09/odLRnz.png" alt="运行结果"></p><h4 id="删除字符串–strip"><a href="#删除字符串–strip" class="headerlink" title="删除字符串–strip()"></a>删除字符串–strip()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.strip()     # 只能删除头部和尾部</span><br><span class="line">.lstrip()    # 删除头部</span><br><span class="line">.rstrip()    # 删除尾部</span><br></pre></td></tr></table></figure><h3 id="实列-5"><a href="#实列-5" class="headerlink" title="实列:"></a>实列:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str1 = &#x27;      Hello Word      &#x27;</span><br><span class="line">print (str1)</span><br><span class="line">print (str1.strip())</span><br><span class="line">print (str1.lstrip())</span><br><span class="line">print (str1.rstrip())</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/09/odiNzz.png" alt="运行结果"></p><h4 id="字符串大小写转换–upper-lower"><a href="#字符串大小写转换–upper-lower" class="headerlink" title="字符串大小写转换–upper()|lower()"></a>字符串大小写转换–upper()|lower()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.upoer()            # 切换为大写</span><br><span class="line">.lower()            # 切换为小写</span><br><span class="line">.captitalize()      # 首字母大写</span><br><span class="line">.title()            # 单词首字母大写</span><br></pre></td></tr></table></figure><h3 id="实列-6"><a href="#实列-6" class="headerlink" title="实列:"></a>实列:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str1 = &#x27;hello WORLD&#x27;</span><br><span class="line">print (str1)</span><br><span class="line">print (str1.upper())</span><br><span class="line">print (str1.lower())</span><br><span class="line">print (str1.capitalize())</span><br><span class="line">print (str1.title())</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/09/odizt5.png" alt="运行结果"></p><h4 id="字符串对齐–center"><a href="#字符串对齐–center" class="headerlink" title="字符串对齐–center()"></a>字符串对齐–center()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.center(占位数,填充符号)       # 居中对齐</span><br><span class="line">.ljust(占位数,填充符号)        # 左对齐</span><br><span class="line">.rjust(占位数,填充符号)        # 右对齐</span><br></pre></td></tr></table></figure><h3 id="实列-7"><a href="#实列-7" class="headerlink" title="实列:"></a>实列:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str1 = &#x27;Hello World&#x27;</span><br><span class="line">print (str1)</span><br><span class="line">print (str1.center(16,&#x27;*&#x27;))</span><br><span class="line">print (str1.ljust(16,&#x27;_&#x27;))</span><br><span class="line">print (str1.rjust(14,&#x27;#&#x27;))</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/09/odi6eh.png" alt="运行结果"></p><h4 id="进制转换–bin-otc-hex"><a href="#进制转换–bin-otc-hex" class="headerlink" title="进制转换–bin()|otc()|hex()"></a>进制转换–bin()|otc()|hex()</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.bin()          # 二进制转换</span><br><span class="line">.oct()          # 八进制转换</span><br><span class="line">.hex()          # 十六进制转换</span><br></pre></td></tr></table></figure><h3 id="实列-8"><a href="#实列-8" class="headerlink" title="实列:"></a>实列:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">num1 = int (input (&#x27;请输入要转换的数字:\n&#x27;))</span><br><span class="line">change = input (&#x27;请选择要转换的进制\n\&#x27;二\&#x27; \&#x27;八\&#x27; \&#x27;十\&#x27; \&#x27;十六\&#x27; (输入进制的数字)\n:&#x27;)</span><br><span class="line">if change == &#x27;2&#x27;:</span><br><span class="line">    print (f&#x27;&#123;num1&#125;进制转换后为:&#123;bin(num1)&#125;&#x27;)</span><br><span class="line">elif change == &#x27;8&#x27;:</span><br><span class="line">    print (&#x27;%d进制转换后为:%s&#x27;%(num1,oct(num1)))</span><br><span class="line">elif change == &#x27;10&#x27;:</span><br><span class="line">    print (&#x27;%d进制转换后为:%s&#x27;%(num1,int(num1)))</span><br><span class="line">elif change == &#x27;16&#x27;:</span><br><span class="line">    print (&#x27;%d进制转换后为:%s&#x27;%(num1,hex(num1)))</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/10/odbr7n.png" alt="运行结果"></p><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.islower()      # 检测小写字母,输出Ture</span><br><span class="line">.isdecimal()    # 检测十进制字符,输出Ture</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-字符串&quot;&gt;&lt;a href=&quot;#1-字符串&quot; class=&quot;headerlink&quot; title=&quot;1.字符串&quot;&gt;&lt;/a&gt;1.字符串&lt;/h1&gt;&lt;h3 id=&quot;定义-由单，双，三引号包围的字符&quot;&gt;&lt;a href=&quot;#定义-由单，双，三引号包围的字符&quot; class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL学习(DML)</title>
    <link href="https://xiaofulihao.github.io/posts/b454a04b.html"/>
    <id>https://xiaofulihao.github.io/posts/b454a04b.html</id>
    <published>2023-10-25T16:06:13.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-数据更新"><a href="#1-数据更新" class="headerlink" title="1.数据更新"></a>1.数据更新</h1><blockquote><h3 id="查询指令可以观察插入的数据是否正确"><a href="#查询指令可以观察插入的数据是否正确" class="headerlink" title="查询指令可以观察插入的数据是否正确"></a><em>查询指令</em><br>可以观察插入的数据是否正确</h3></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名;</span><br><span class="line">    # *代表全部库 </span><br></pre></td></tr></table></figure><blockquote><blockquote><h3 id="将查询的数据，插入新的表结构"><a href="#将查询的数据，插入新的表结构" class="headerlink" title="将查询的数据，插入新的表结构"></a>将查询的数据，插入新的表结构</h3></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT [INTO] &lt;数据表名1&gt;</span><br><span class="line">[字段名]    # 如果不填，则会将表中所有数据插入</span><br><span class="line">SELECT 字段名1，字段名2，字段名3... FROM &lt;数据库表名2&gt;  # SELECT中&lt;数据库表名2&gt;的字段类型与字段数应该完全一致</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><h4 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h4></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO new_course </span><br><span class="line">(id,name,nature,credits)</span><br><span class="line">SELECT id,name,nature,credits FROM cjgl.course;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/30/oO3rWm.png" alt="运行结果"></p><blockquote><h3 id="向所有或者部分字段添加"><a href="#向所有或者部分字段添加" class="headerlink" title="向所有或者部分字段添加"></a><em>向所有或者部分字段添加</em></h3></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    # 此语法字段只需与字段名一一对应</span><br><span class="line">    # 如果有约束，要遵从约束</span><br><span class="line">    # 自动递增约束可以不用填写</span><br><span class="line">    # 可以向部分字段添加</span><br><span class="line"> INSERT [INTO] 表名 (字段名) VALUES(字段)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 两个语法效果一样,第二条更简单</span><br><span class="line">    # 不能向部分字段添加</span><br><span class="line">INSERT [INTO] 表名 VALUES(字段);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # 向表中插入部分字段</span><br><span class="line">INSERT INTO 表名 SET 字段名=字段值</span><br></pre></td></tr></table></figure><blockquote><blockquote><h3 id="实列："><a href="#实列：" class="headerlink" title="实列："></a><em>实列：</em></h3></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO course VALUES(1,&#x27;数据库基础&#x27;,&#x27;必修&#x27;,3,48,&#x27;测试数据&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/25/oWPRMu.md.png" alt="运行结果"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    # 遵从约束</span><br><span class="line">INSERT INTO course (name,nature) VALUES(&#x27;大学英语&#x27;,&#x27;选修&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/25/oWaukQ.md.png" alt="运行结果"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    # 插入多行命令</span><br><span class="line">INSERT INTO course (name,nature) VALUES(&#x27;易语言&#x27;,&#x27;选修&#x27;),(&#x27;Python&#x27;,&#x27;选修&#x27;),(&#x27;Java&#x27;,&#x27;选修&#x27;),(&#x27;C++&#x27;,&#x27;选修&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/25/oW151t.md.png" alt="运行结果"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    # 插入部分字段</span><br><span class="line">INSERT INTO course SET name = &#x27;C语言&#x27;,nature = &#x27;选修&#x27;;  # 要遵从约束</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/25/oW34iv.md.png" alt="运行结果"></p><blockquote><blockquote><h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a><em>实验</em></h3></blockquote></blockquote><h4 id="内容-添加一行带有默认值的表结构，不给表结构插入数据-观察输出"><a href="#内容-添加一行带有默认值的表结构，不给表结构插入数据-观察输出" class="headerlink" title="内容:添加一行带有默认值的表结构，不给表结构插入数据,观察输出"></a>内容:<br>添加一行带有默认值的表结构，<br>不给表结构插入数据,<br>观察输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table course add column 实验 varchar(10) not NULL default (&#x27;测试&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/25/oW3is9.png" alt="实验结果"></p><h3 id="结论-’如果表结构设置了默认值，不给此结构插入数据，则将默认值插入此结构’"><a href="#结论-’如果表结构设置了默认值，不给此结构插入数据，则将默认值插入此结构’" class="headerlink" title="结论:’如果表结构设置了默认值，不给此结构插入数据，则将默认值插入此结构’"></a>结论:’如果表结构设置了默认值，<br>不给此结构插入数据，<br>则将默认值插入此结构’</h3><p>易出现问题:<br><em>中英文输入混搭</em>,<br><em>符号错误</em>,<br><em>违法约束等</em></p><hr><h1 id="2-数据修改"><a href="#2-数据修改" class="headerlink" title="2.数据修改"></a>2.数据修改</h1><h2 id="修改所有值"><a href="#修改所有值" class="headerlink" title="修改所有值"></a>修改所有值</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UPDATE &lt;数据库表名&gt; </span><br><span class="line">SET 字段名 = 字段值;    # 如果是字符串需要添加&#x27;&#x27;</span><br></pre></td></tr></table></figure><h4 id="实列：-1"><a href="#实列：-1" class="headerlink" title="实列："></a>实列：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE new_course SET nature = 字段值;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/30/oO3VUh.png" alt="运行结果"></p><h2 id="修改部分值"><a href="#修改部分值" class="headerlink" title="修改部分值"></a>修改部分值</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE &lt;数据库表名&gt; </span><br><span class="line">SET 字段名 = 字段值</span><br><span class="line">WHERE 字段名 = 字段值;     # 如果字段名等于字段值则修改</span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例:"></a>实例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE new_course </span><br><span class="line">SET credits = 3</span><br><span class="line">WHERE name = &#x27;数据库基础&#x27;; </span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/30/oO3fPc.png" alt="运行结果"></p><hr><h2 id="3-数据删除"><a href="#3-数据删除" class="headerlink" title="3.数据删除"></a>3.数据删除</h2><h2 id="删除全部数据"><a href="#删除全部数据" class="headerlink" title="删除全部数据"></a>删除全部数据</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM 数据表名;       # 删除的只有数据，表结构还在</span><br></pre></td></tr></table></figure><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例:"></a>实例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM new_course;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/30/oO3hHq.png" alt="运行结果"></p><h2 id="删除部分数据"><a href="#删除部分数据" class="headerlink" title="删除部分数据"></a>删除部分数据</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM 数据表名</span><br><span class="line">WHERE 字段名 = 字段值;     # 如果字段名等于字段值则修改</span><br></pre></td></tr></table></figure><h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例:"></a>实例:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM course</span><br><span class="line">WHERE id = 2;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/30/oO3j7r.png" alt="运行结果"><br><img src="https://vip.helloimg.com/images/2023/10/30/oO3yCT.png" alt="运行结果"></p><hr><h1 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a>扩展：</h1><h3 id="设置外键"><a href="#设置外键" class="headerlink" title="设置外键"></a>设置外键</h3><h4 id="设置外键-1"><a href="#设置外键-1" class="headerlink" title="设置外键"></a>设置外键</h4><p>(主键和外键的数据类型必须一致.如，两者都是 INT 类型，或者都是 CHAR 类型。如果不满足这样的要求，在创建从表时，就会出现“ERROR 1005(HY000): Can’t create table”错误。)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FOREIGN KEY 本表键名</span><br><span class="line">REFERENCES &lt;外表名&gt; 主键</span><br></pre></td></tr></table></figure><h4 id="如"><a href="#如" class="headerlink" title="如:"></a>如:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE Table tb_class(</span><br><span class="line">    id int(5) NOT NULL PRIMARY KEY auto_increment,</span><br><span class="line">    name VARCHAR(10) not NULL,</span><br><span class="line">    number INT(5) DEFAULT &#x27;0&#x27;,</span><br><span class="line">    department_id INT(5),</span><br><span class="line">    remarks CHAR(10) DEFAULT&#x27;测试数据&#x27;,</span><br><span class="line">    FOREIGN KEY (department_id) REFERENCES tb_department (id)</span><br><span class="line">    on UPDATE CASCADE   # 同步增加</span><br><span class="line">    on delete CASCADE   # 同步删除</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/01/oOkxO9.png" alt="查询表结构"></p><hr><h2 id="4-数据查询"><a href="#4-数据查询" class="headerlink" title="4.数据查询"></a>4.数据查询</h2><p>(所有实例基于,已经创建了名为db_schooldb的数据库,表名为score,已经插入了数据)</p><h4 id="SELECT语法格式"><a href="#SELECT语法格式" class="headerlink" title="SELECT语法格式"></a>SELECT语法格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT </span><br><span class="line">[distinct]          # 消除重复行</span><br><span class="line">[*|&lt;字段列名&gt;]      # &#x27;*&#x27;表示所以字段列表,字段列名表示要查询字段的名称</span><br><span class="line">[FROM &lt;表1&gt;,&lt;表2&gt;...]       # 表示数据来源,可以单个,可以多个</span><br><span class="line">[WHERE &lt;表达式&gt;]        # 限制条件,满足条件查询 (直段名可以不用&#x27;&#x27;,数据必须加&#x27;&#x27;)</span><br><span class="line">[GROUP BY &lt;字段&gt;]       # 将查询出的数据,按指定的字段分组</span><br><span class="line">[ORDER BY &lt;字段&gt;]       # 按什么样的顺序排序(升序(ASC),降序(DESC)),默认升序(ASC)</span><br><span class="line">[LIMIT [&lt;offset&gt;,]&lt;row COUNT&gt;]      # 选择查询出来的数据条数</span><br></pre></td></tr></table></figure><h3 id="DISTINCT语句"><a href="#DISTINCT语句" class="headerlink" title="DISTINCT语句"></a>DISTINCT语句</h3><h4 id="对比两个实列"><a href="#对比两个实列" class="headerlink" title="对比两个实列"></a><strong>对比两个实列</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 课程号 FROM score;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/09/od4Vcc.png" alt="运行结果"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT 课程号 FROM score;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/09/od4YVq.png" alt="运行结果"></p><h3 id="WHERE语句"><a href="#WHERE语句" class="headerlink" title="WHERE语句"></a>WHERE语句</h3><h4 id="WHERE必须紧跟FROM后面"><a href="#WHERE必须紧跟FROM后面" class="headerlink" title="WHERE必须紧跟FROM后面"></a>WHERE必须紧跟FROM后面</h4><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">=                # 等于</span><br><span class="line">&lt;                # 小于</span><br><span class="line">&lt;=               # 小于等于</span><br><span class="line">&gt;                # 大于</span><br><span class="line">&gt;=               # 大于等于</span><br><span class="line">&lt;&gt;               # 不等于</span><br><span class="line">!=               # 不等于</span><br></pre></td></tr></table></figure><h2 id="逻辑操作符"><a href="#逻辑操作符" class="headerlink" title="逻辑操作符"></a>逻辑操作符</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">IS NULL</span><br><span class="line">BETWEEN A AND B        # 在A与B之间</span><br><span class="line">IN()                   # 在集合里面匹配</span><br><span class="line">LIKE                   # 模糊查询|匹配</span><br><span class="line">EXISTS</span><br><span class="line">UNIQUE</span><br><span class="line">ALL</span><br><span class="line">ANY</span><br></pre></td></tr></table></figure><h5 id="LIKE-的具体语法"><a href="#LIKE-的具体语法" class="headerlink" title="LIKE 的具体语法"></a><em>LIKE 的具体语法</em></h5><p><LIKE>                  # 模糊查询,接WHERE后,与%和_一起使用<br>‘%a’     &#x2F;&#x2F;以a结尾的数据<br>‘a%’     &#x2F;&#x2F;以a开头的数据<br>‘%a%’    &#x2F;&#x2F;含有a的数据<br>‘<em>a</em>‘    &#x2F;&#x2F;三位且中间字母是a的<br>‘<em>a’     &#x2F;&#x2F;两位且结尾字母是a的<br>‘a</em>‘     &#x2F;&#x2F;两位且开头字母是a的<br>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 列名 FROM 表名 WHERE 列名 LIKE &#x27;&lt;条件&gt;&#x27;</span><br></pre></td></tr></table></figure><h2 id="连接操作运算符"><a href="#连接操作运算符" class="headerlink" title="连接操作运算符"></a>连接操作运算符</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AND         # 并且</span><br><span class="line">OR          # 或者</span><br></pre></td></tr></table></figure><h3 id="GROUP-BY语句"><a href="#GROUP-BY语句" class="headerlink" title="GROUP BY语句"></a>GROUP BY语句</h3><p>(在已经创建了表名为student的表,且已经插入了数据)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT `性别`,COUNT(&#x27;学号&#x27;) as 人数 FROM student GROUP BY 性别;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/15/ov2uVA.png" alt="运行结果"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GROUP BY语句的执行顺序是,先进行分组,再统计</span><br></pre></td></tr></table></figure><h4 id="WITH-ROLLUP"><a href="#WITH-ROLLUP" class="headerlink" title="WITH ROLLUP"></a><em>WITH ROLLUP</em></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WITH ROLLUP 语句是在分组统计数据基础上再进行相同的统计</span><br><span class="line"></span><br><span class="line">SELECT `性别`,COUNT(&#x27;学号&#x27;) as 人数 FROM student GROUP BY 性别 WITH ROLLUP;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/15/ovTRZh.png" alt="运行结果"></p><h4 id="coalesce"><a href="#coalesce" class="headerlink" title="coalesce"></a><em>coalesce</em></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">可以使用 coalesce 来设置一个可以取代 NUll 的名称，coalesce 语法：</span><br><span class="line">select coalesce(a,b,c);</span><br><span class="line">参数说明：如果a==null,则选择b；如果b==null,则选择c；如果a!=null,则选择a；如果a b c 都为null ，则返回为null（没意义）.</span><br><span class="line"></span><br><span class="line">SELECT COALESCE(性别,&#x27;总人数&#x27;) `性别`,COUNT(&#x27;学号&#x27;) as 人数 FROM student GROUP BY 性别 WITH ROLLUP </span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/15/ovT0T5.png" alt="运行结果"></p><h4 id="HAVING"><a href="#HAVING" class="headerlink" title="HAVING"></a><em>HAVING</em></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">where 和having之后都是筛选条件，但是有区别的：</span><br><span class="line"></span><br><span class="line">1.where在group by前， having在group by 之后</span><br><span class="line"></span><br><span class="line">2.聚合函数（avg、sum、max、min、count），不能作为条件放在where之后，但可以放在having之后</span><br><span class="line"></span><br><span class="line">SELECT `学号`,`课程号`,AVG(成绩) as &#x27;平均成绩&#x27;</span><br><span class="line">FROM score</span><br><span class="line">GROUP BY `学号`,`课程号`</span><br><span class="line">HAVING AVG(`成绩`)&gt;= 90</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/15/ovWtP0.png" alt="运行结果"></p><hr><h2 id="5-聚合函数"><a href="#5-聚合函数" class="headerlink" title="5.聚合函数"></a>5.聚合函数</h2><h4 id="常用的聚会函数"><a href="#常用的聚会函数" class="headerlink" title="常用的聚会函数"></a>常用的聚会函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SUM(字段名)     # 求和</span><br><span class="line">ABS(X)          # 返回X的绝对值</span><br><span class="line">MAX()           # 最大值</span><br><span class="line">MIN()           # 最小值</span><br><span class="line">COUNT()         # 所有列的总和</span><br><span class="line">AVG()           # 平均值</span><br></pre></td></tr></table></figure><h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 函数(列名) FROM 表名;</span><br></pre></td></tr></table></figure><h3 id="实列"><a href="#实列" class="headerlink" title="实列"></a>实列</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT SUM(`成绩`) AS 总分数 FROM score ;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/13/odf3iD.png" alt="运行结果"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-数据更新&quot;&gt;&lt;a href=&quot;#1-数据更新&quot; class=&quot;headerlink&quot; title=&quot;1.数据更新&quot;&gt;&lt;/a&gt;1.数据更新&lt;/h1&gt;&lt;blockquote&gt;
&lt;h3 id=&quot;查询指令可以观察插入的数据是否正确&quot;&gt;&lt;a href=&quot;#查询指令可以观</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>PYthon学习01</title>
    <link href="https://xiaofulihao.github.io/posts/c97e2700.html"/>
    <id>https://xiaofulihao.github.io/posts/c97e2700.html</id>
    <published>2023-10-19T10:37:45.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-输入输出"><a href="#1-输入输出" class="headerlink" title="1.输入输出"></a>1.<strong>输入输出</strong></h1><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input ()  # 输出为字符型</span><br></pre></td></tr></table></figure><h4 id="可以使用如’int-input-’的形式转换为整数型"><a href="#可以使用如’int-input-’的形式转换为整数型" class="headerlink" title="可以使用如’int (input())’的形式转换为整数型"></a>可以使用如’int (input())’的形式转换为整数型</h4><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print ()</span><br></pre></td></tr></table></figure><hr><h1 id="2-运算符"><a href="#2-运算符" class="headerlink" title="2.运算符"></a>2.<strong>运算符</strong></h1><p><strong>算数运算符</strong></p><h4 id="‘-’-‘-‘-‘-’-‘-‘-‘-’-‘-‘-‘-’"><a href="#‘-’-‘-‘-‘-’-‘-‘-‘-’-‘-‘-‘-’" class="headerlink" title="‘+’ ‘-‘ ‘*’ ‘&#x2F;‘ ‘%’ ‘&#x2F;&#x2F;‘ ‘**’"></a>‘+’ ‘-‘ ‘*’ ‘&#x2F;‘ ‘%’ ‘&#x2F;&#x2F;‘ ‘**’</h4><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">num1 = 10</span><br><span class="line">num2 = 20</span><br><span class="line"></span><br><span class="line">print(num1+num2)    </span><br><span class="line">print(num1-num2)    </span><br><span class="line">print(num1*num2)</span><br><span class="line">print(num1/num2)</span><br><span class="line">print(num1//num2)   #取整</span><br><span class="line">print(num1%num2)    #取商</span><br><span class="line">print(num1**num2)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/19/o2Q7yr.png" alt="运行结果"><br><strong>赋值运算符</strong></p><h4 id="Python的赋值是从右往左符号有-‘-’-‘-’-‘-’-‘-’-‘-’-‘-’-‘-’-‘-’"><a href="#Python的赋值是从右往左符号有-‘-’-‘-’-‘-’-‘-’-‘-’-‘-’-‘-’-‘-’" class="headerlink" title="Python的赋值是从右往左符号有 ‘&#x3D;’ ‘+&#x3D;’ ‘-&#x3D;’ ‘*&#x3D;’ ‘&#x2F;&#x3D;’ ‘%&#x3D;’ ‘&#x2F;&#x2F;&#x3D;’ ‘**&#x3D;’"></a>Python的赋值是从右往左符号有 ‘&#x3D;’ ‘+&#x3D;’ ‘-&#x3D;’ ‘*&#x3D;’ ‘&#x2F;&#x3D;’ ‘%&#x3D;’ ‘&#x2F;&#x2F;&#x3D;’ ‘**&#x3D;’</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">num1 = 5</span><br><span class="line">print (&#x27;num1=&#x27;,num1)</span><br><span class="line">num1 += 5</span><br><span class="line">print (&#x27;num1=&#x27;,num1)</span><br><span class="line">num1 -= 5</span><br><span class="line">print (&#x27;num1=&#x27;,num1)</span><br><span class="line">num1 *= 5</span><br><span class="line">print (&#x27;num1=&#x27;,num1)</span><br><span class="line">num1 /= 5</span><br><span class="line">print (&#x27;num1=&#x27;,num1)</span><br><span class="line">num1 //= 5</span><br><span class="line">print (&#x27;num1=&#x27;,num1)</span><br><span class="line">num1 **= 5</span><br><span class="line">print (&#x27;num1=&#x27;,num1)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/19/o2pG29.png" alt="运行结果"><br><strong>比较运算符</strong></p><h4 id="返回值为布尔型-‘-’-‘-’-‘’"><a href="#返回值为布尔型-‘-’-‘-’-‘’" class="headerlink" title="返回值为布尔型 ‘&#x3D;’ ‘!&#x3D;’ ‘&lt;’ ‘&gt;’"></a>返回值为布尔型 ‘&#x3D;’ ‘!&#x3D;’ ‘&lt;’ ‘&gt;’</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A = 3</span><br><span class="line">B = 5</span><br><span class="line">print (A==B)</span><br><span class="line">print (A!=B)    #不等于</span><br><span class="line">print (A&lt;B)</span><br><span class="line">print (A&gt;B)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/19/o2pLBq.png" alt="运行结果"><br><strong>逻辑运算符</strong></p><h4 id="返回值为布尔型-‘Ture’-‘False’用符号-‘and’-‘or’-‘not’"><a href="#返回值为布尔型-‘Ture’-‘False’用符号-‘and’-‘or’-‘not’" class="headerlink" title="返回值为布尔型 ‘Ture’ ‘False’用符号 ‘and’ ‘or’ ‘not’"></a>返回值为布尔型 ‘Ture’ ‘False’<br>用符号 ‘and’ ‘or’ ‘not’</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A = True</span><br><span class="line">B = False</span><br><span class="line">print (A and B)</span><br><span class="line">print (A or B)</span><br><span class="line">print (not A)   #A的反向</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/19/o2pbeK.png" alt="运行结果"></p><hr><p><strong>成员运算符</strong></p><h4 id="返回值为布尔型"><a href="#返回值为布尔型" class="headerlink" title="返回值为布尔型"></a>返回值为布尔型</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X = &#x27;P&#x27;</span><br><span class="line">Y = &#x27;Python&#x27;</span><br><span class="line">print (X in Y )</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/19/o2plTb.png" alt="运行结果"><br><strong>移位运算符</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">X = 2</span><br><span class="line">print (X &lt;&lt; 3)  #表示的是2*2的3次方</span><br><span class="line">print (X &lt;&lt; 3)  #表示的是2/2的3次方</span><br><span class="line"># 移位运算符计算是按计算机二进制运算</span><br><span class="line">#例：X*X的N次方</span><br><span class="line"># X/X的N次方</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/19/o2pMUo.png" alt="运行结果"><br><strong>运算优先级</strong></p><h4 id="运算优先级只有遵循数学运算顺序具体如下："><a href="#运算优先级只有遵循数学运算顺序具体如下：" class="headerlink" title="运算优先级只有遵循数学运算顺序具体如下："></a>运算优先级只有<br>遵循数学运算顺序<br><strong>具体如下：</strong></h4><p>[<img src="https://vip.helloimg.com/images/2023/10/19/o2yV9Y.th.png" alt="运算优先级">]<br><a href="https://www.runoob.com/python/python-operators.html">菜鸟教程运算符</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">num1 = 29.5</span><br><span class="line">num2 = 4</span><br><span class="line">num3 = 2.5</span><br><span class="line">num4 = (num1-(num2*3))/num3</span><br><span class="line">print (&#x27;需要&#123;&#125;次&#x27;.format (&#x27;%s&#x27;%num4))</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/19/o2prqz.png" alt="运行结果"><br><strong>数值互换</strong></p><h4 id="传统的数值互换需要设置个临时变量，python可以直接互换"><a href="#传统的数值互换需要设置个临时变量，python可以直接互换" class="headerlink" title="传统的数值互换需要设置个临时变量，python可以直接互换"></a>传统的数值互换需要设置个临时变量，python可以直接互换</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = 10</span><br><span class="line">b = 20</span><br><span class="line">a,b = b,a</span><br><span class="line">print (&#x27;a=&#x27;,a)</span><br><span class="line">print (&#x27;b=&#x27;,b)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/19/o2pVWA.png" alt="运行结果"></p><hr><h1 id="3-条件语句"><a href="#3-条件语句" class="headerlink" title="3.条件语句"></a>3.<strong>条件语句</strong></h1><p><strong>单分支与双分支</strong></p><h4 id="返回结果值只能为’真’或者’假’"><a href="#返回结果值只能为’真’或者’假’" class="headerlink" title="返回结果值只能为’真’或者’假’"></a>返回结果值只能为’真’或者’假’</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if 条件表达式:</span><br><span class="line">    代码块  #为&quot;真&quot;执行</span><br><span class="line">else:   #为&quot;假&quot;执行</span><br><span class="line">    代码块</span><br></pre></td></tr></table></figure><p><strong>如：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = int(input (&quot;输入&quot;))</span><br><span class="line">if a&gt;20:</span><br><span class="line">    print(&quot;为真&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;为假&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/19/oT53Ih.png" alt="运行结果"><br><strong>多分支</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#   如果条件都满足，则只会执行第一个满足条件的代码块</span><br><span class="line"></span><br><span class="line">if 条件表达式:</span><br><span class="line">    代码块  #为&quot;真&quot;执行</span><br><span class="line">elif 条件表达式1:   </span><br><span class="line">    代码块</span><br><span class="line">elif 条件表达式2:   </span><br><span class="line">    代码块</span><br><span class="line">elif 条件表达式3:   </span><br><span class="line">    代码块</span><br><span class="line">......</span><br><span class="line">elif 条件表达式n:   </span><br><span class="line">    代码块</span><br><span class="line">else:   #为&quot;假&quot;执行</span><br><span class="line">    代码块</span><br></pre></td></tr></table></figure><p><strong>如；</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = int(input (&quot;输入a=&quot;))</span><br><span class="line">b = int(input (&quot;输入b=&quot;))</span><br><span class="line">if b &gt; a:</span><br><span class="line">    print(&quot;b&gt;a&quot;)</span><br><span class="line">elif a &gt; b:</span><br><span class="line">    print(&quot;a&gt;b&quot;)</span><br><span class="line">elif a == b:</span><br><span class="line">    print(&quot;a=b&quot;)</span><br><span class="line">else :</span><br><span class="line">    print(&quot;无结果&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/20/oTFDCX.md.png" alt="运行结果"><br><strong>if嵌套语句</strong></p><h4 id="if嵌套语句判断段与缩进是有关系的如："><a href="#if嵌套语句判断段与缩进是有关系的如：" class="headerlink" title="if嵌套语句判断段与缩进是有关系的如："></a>if嵌套语句判断段与缩进是有关系的<br>如：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if 条件表达式 : #外层条件</span><br><span class="line">    if :    #内层条件</span><br><span class="line">        代码块</span><br><span class="line">else :</span><br><span class="line">    代码块</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if 条件表达式 ；</span><br><span class="line">    if ：</span><br><span class="line">        代码块</span><br><span class="line">    else ：</span><br><span class="line">        代码块</span><br></pre></td></tr></table></figure><h2 id="两个表示的含有不一样只有if与else对齐才是一对"><a href="#两个表示的含有不一样只有if与else对齐才是一对" class="headerlink" title="两个表示的含有不一样只有if与else对齐才是一对"></a><strong>两个表示的含有不一样</strong><br>只有<strong>if</strong>与<strong>else</strong>对齐才是一对</h2><hr><h1 id="4-循环语句"><a href="#4-循环语句" class="headerlink" title="4.循环语句"></a>4.<strong>循环语句</strong></h1><p><strong>while语句</strong></p><h4 id="while-语句在条件语句为”真”时才会执行、当明确知道结束条件使用"><a href="#while-语句在条件语句为”真”时才会执行、当明确知道结束条件使用" class="headerlink" title="while 语句在条件语句为”真”时才会执行、当明确知道结束条件使用"></a>while 语句在条件语句为”真”时才会执行、<br>当明确知道结束条件使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">while 条件语句 :</span><br><span class="line">    循环体      # 只有为&quot;真&quot;才会执行</span><br></pre></td></tr></table></figure><p><strong>计次循环</strong></p><h4 id="for循环是当迭代变量-对象值，才会停止"><a href="#for循环是当迭代变量-对象值，才会停止" class="headerlink" title="for循环是当迭代变量&#x3D;对象值，才会停止"></a>for循环是当<em>迭代变量&#x3D;对象值，才会停止</em></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for 迭代变量 in 对象:</span><br><span class="line">    循环体</span><br></pre></td></tr></table></figure><h4 id="for可以将列表的输出结果改为竖直输出"><a href="#for可以将列表的输出结果改为竖直输出" class="headerlink" title="for可以将列表的输出结果改为竖直输出"></a>for可以将列表的输出结果改为竖直输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for a in [1,2,3]:</span><br><span class="line">    print(a)</span><br><span class="line">print(&#x27;运算结束&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/02/oOVwko.png" alt="运行结果"></p><p><strong>range函数</strong></p><h4 id="一般与for循环一起使用"><a href="#一般与for循环一起使用" class="headerlink" title="一般与for循环一起使用"></a>一般与for循环一起使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rangge (start,end,step)</span><br><span class="line">    #steart 指定计数起始值,如果省略从0开始</span><br><span class="line">    #end 指定计数结束值,（不包括当前值）不能省略</span><br><span class="line">    #step 指定步长,省略步长默认为1</span><br></pre></td></tr></table></figure><h4 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用:"></a>基础使用:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for a in range(0,10):</span><br><span class="line">    print(a)</span><br><span class="line">print(&#x27;运算结束&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/11/02/oOVv9b.png" alt="运行结果"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-输入输出&quot;&gt;&lt;a href=&quot;#1-输入输出&quot; class=&quot;headerlink&quot; title=&quot;1.输入输出&quot;&gt;&lt;/a&gt;1.&lt;strong&gt;输入输出&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;输入&lt;/strong&gt;&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    
    <category term="Python,学习" scheme="https://xiaofulihao.github.io/tags/Python-%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>MySql学习(DDL命令)</title>
    <link href="https://xiaofulihao.github.io/posts/c6714bff.html"/>
    <id>https://xiaofulihao.github.io/posts/c6714bff.html</id>
    <published>2023-10-18T15:56:47.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h1></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database (title);</span><br></pre></td></tr></table></figure><hr><blockquote><h1 id="2-查看全部数据库"><a href="#2-查看全部数据库" class="headerlink" title="2.查看全部数据库"></a>2.查看全部数据库</h1></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><hr><blockquote><h1 id="3-查询数据库路径"><a href="#3-查询数据库路径" class="headerlink" title="3.查询数据库路径"></a>3.查询数据库路径</h1></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select database();</span><br></pre></td></tr></table></figure><hr><blockquote><h1 id="4-删除数据库"><a href="#4-删除数据库" class="headerlink" title="4.删除数据库"></a>4.删除数据库</h1></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database 数据库名</span><br></pre></td></tr></table></figure><hr><blockquote><h1 id="5-创建数据库表结构"><a href="#5-创建数据库表结构" class="headerlink" title="5.创建数据库表结构"></a>5.创建数据库表结构</h1></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create table IF NOT EXISTS 表名(</span><br><span class="line">    字段1 数据类型 [注释],</span><br><span class="line">    字段2 数据类型 [注释],</span><br><span class="line">    字段3 数据类型 [注释],</span><br><span class="line">    .........</span><br><span class="line">    字段* 数据类型 [注释]</span><br><span class="line">);</span><br><span class="line"># IF NOT EXISTS 可以防止图形化界面报错</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">primary key #设置主键</span><br><span class="line">not null #不为空</span><br><span class="line">default (title) #设置默认值</span><br><span class="line">auto_increment #递增</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 顺序可以打乱</span><br></pre></td></tr></table></figure><blockquote><blockquote><h1 id="实例："><a href="#实例：" class="headerlink" title="实例："></a><strong>实例：</strong></h1></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create table ts (</span><br><span class="line">    图书编号 char(10) not null primary key,</span><br><span class="line">    类别 varchar(8) not null default &#x27;计算机&#x27;,</span><br><span class="line">    书名 varchar(40) not null,</span><br><span class="line">    出版时间 date,</span><br><span class="line">    单价 float(5,2),</span><br><span class="line">    数量 int(5)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/18/o2OdDT.png" alt="查询运行结果"></p><hr><blockquote><h1 id="6-查询数据库表名"><a href="#6-查询数据库表名" class="headerlink" title="6.查询数据库表名"></a>6.查询数据库表名</h1></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><hr><blockquote><h1 id="7-查询表结构"><a href="#7-查询表结构" class="headerlink" title="7.查询表结构"></a>7.查询表结构</h1></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc 表名;</span><br></pre></td></tr></table></figure><hr><blockquote><h1 id="8-添加表结构"><a href="#8-添加表结构" class="headerlink" title="8.添加表结构"></a>8.添加表结构</h1></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add column 添加项 数据类型;</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><h1 id="实例：-1"><a href="#实例：-1" class="headerlink" title="实例："></a><strong>实例：</strong></h1></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table ts add column 作者 varchar(8);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/18/o2OwG1.png" alt="查询运行结果"></p><hr><blockquote><h1 id="9-查询创建表结构指令"><a href="#9-查询创建表结构指令" class="headerlink" title="9.查询创建表结构指令"></a>9.查询创建表结构指令</h1></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create table 表结构名;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/23/oT99Az.md.png" alt="运行结果"></p><hr><blockquote><h1 id="10-修改表格结构"><a href="#10-修改表格结构" class="headerlink" title="10.修改表格结构"></a>10.修改表格结构</h1><blockquote><h3 id="添加字段"><a href="#添加字段" class="headerlink" title="添加字段"></a><em>添加字段</em></h3></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 add column 添加的字段 类型 [约束];</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a><strong>实例</strong></h4></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table studen add column stu_age int(2);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/23/oT9ONA.md.png" alt="运行结果"></p><blockquote><blockquote><h3 id="修改字段名字及类型"><a href="#修改字段名字及类型" class="headerlink" title="修改字段名字及类型"></a><em>修改字段名字及类型</em></h3></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 change 需要修改的字段 修改的字段 类型 [约束];</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a><strong>实例</strong></h4></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table studen change stu_number stu_sno char(10);</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/23/oT9vE0.md.png" alt="运行结果"></p><blockquote><blockquote><h3 id="修改字段默认值"><a href="#修改字段默认值" class="headerlink" title="修改字段默认值"></a><em>修改字段默认值</em></h3></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 alter 修改的字段 set default 修改的内容;</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a><strong>实例</strong></h4></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table studen alter column stu_sex set default &#x27;Male&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/23/oT9krS.md.png" alt="运行结果"></p><blockquote><blockquote><h3 id="修改字段类型"><a href="#修改字段类型" class="headerlink" title="修改字段类型"></a><em>修改字段类型</em></h3></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 modify column 修改的字段 修改的类型(4)</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><h4 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a><strong>实例</strong></h4></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table studen modify column stu_sex varchar(4)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/23/oT9f6t.md.png" alt="运行结果"></p><blockquote><blockquote><h3 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a><em>删除字段</em></h3></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table studen drop column 字段;</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><h4 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a><strong>实例</strong></h4></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table studen drop column stu_age;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/23/oTOGcX.md.png" alt="运行结果"></p><blockquote><blockquote><h3 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a><em>修改表名</em></h3></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 修改前的表名 rename [to] 修改后的表名;</span><br></pre></td></tr></table></figure><blockquote><blockquote><blockquote><h4 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a><strong>实例</strong></h4></blockquote></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table studen rename stu;</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/23/oTO3SR.md.png" alt="运行结果"></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;h1 id=&quot;1-创建数据库&quot;&gt;&lt;a href=&quot;#1-创建数据库&quot; class=&quot;headerlink&quot; title=&quot;1.创建数据库&quot;&gt;&lt;/a&gt;1.创建数据库&lt;/h1&gt;&lt;/blockquote&gt;
&lt;figure class=&quot;highlight p</summary>
      
    
    
    
    
    <category term="MySQL" scheme="https://xiaofulihao.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署步骤</title>
    <link href="https://xiaofulihao.github.io/posts/1364c3c0.html"/>
    <id>https://xiaofulihao.github.io/posts/1364c3c0.html</id>
    <published>2023-10-18T13:03:47.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="删除链接"><a href="#删除链接" class="headerlink" title="删除链接"></a><strong>删除链接</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin </span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a><strong>初始化</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h2 id="连接GitHub源码仓库"><a href="#连接GitHub源码仓库" class="headerlink" title="连接GitHub源码仓库"></a><strong>连接GitHub源码仓库</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:xiaofulihao/hexo.git</span><br></pre></td></tr></table></figure><h2 id="将源码交到仓库"><a href="#将源码交到仓库" class="headerlink" title="将源码交到仓库"></a><strong>将源码交到仓库</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;github action update&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;删除链接&quot;&gt;&lt;a href=&quot;#删除链接&quot; class=&quot;headerlink&quot; title=&quot;删除链接&quot;&gt;&lt;/a&gt;&lt;strong&gt;删除链接&lt;/strong&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    
    <category term="hexo,部署" scheme="https://xiaofulihao.github.io/tags/hexo-%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://xiaofulihao.github.io/posts/ff05b5bf.html"/>
    <id>https://xiaofulihao.github.io/posts/ff05b5bf.html</id>
    <published>2023-10-08T08:53:37.000Z</published>
    <updated>2023-11-23T11:21:17.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo博客语法是Markdown的语法"><a href="#hexo博客语法是Markdown的语法" class="headerlink" title="hexo博客语法是Markdown的语法"></a><em>hexo博客</em>语法是<em>Markdown</em>的语法</h1><p><a href="https://markdown.com.cn/">Markdown官网</a></p><h1 id="1-标题测试"><a href="#1-标题测试" class="headerlink" title="1.标题测试"></a>1.<em>标题测试</em></h1><p>“#”可以控制标题大小，最多6个.<br>如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 标题测试</span><br><span class="line">## 标题测试</span><br><span class="line">### 标题测试</span><br><span class="line">#### 标题测试</span><br><span class="line">##### 标题测试</span><br><span class="line">###### 标题测试</span><br></pre></td></tr></table></figure><h1 id="标题测试"><a href="#标题测试" class="headerlink" title="标题测试"></a>标题测试</h1><h2 id="标题测试-1"><a href="#标题测试-1" class="headerlink" title="标题测试"></a>标题测试</h2><h3 id="标题测试-2"><a href="#标题测试-2" class="headerlink" title="标题测试"></a>标题测试</h3><h4 id="标题测试-3"><a href="#标题测试-3" class="headerlink" title="标题测试"></a>标题测试</h4><h5 id="标题测试-4"><a href="#标题测试-4" class="headerlink" title="标题测试"></a>标题测试</h5><h6 id="标题测试-5"><a href="#标题测试-5" class="headerlink" title="标题测试"></a>标题测试</h6><hr><h1 id="2-Markdown-换行"><a href="#2-Markdown-换行" class="headerlink" title="2.Markdown 换行"></a>2.<em>Markdown 换行</em></h1><h3 id="几乎每个-Markdown-应用程序都支持两个或多个空格进行换行但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。幸运的是，几乎每个-Markdown-应用程序都支持另一种换行方式：HTML的标签"><a href="#几乎每个-Markdown-应用程序都支持两个或多个空格进行换行但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。幸运的是，几乎每个-Markdown-应用程序都支持另一种换行方式：HTML的标签" class="headerlink" title="几乎每个 Markdown 应用程序都支持两个或多个空格进行换行但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。幸运的是，几乎每个 Markdown 应用程序都支持另一种换行方式：HTML的标签"></a>几乎每个 Markdown 应用程序都支持两个或多个空格进行换行<br>但这是有争议的，因为很难在编辑器中直接看到空格，<br>并且很多人在每个句子后面都会有意或无意地添加两个空格。<br>由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。<br>幸运的是，几乎每个 Markdown 应用程序都支持另一种换行方式：HTML的标签</h3><p>如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个&lt;br&gt;测试</span><br></pre></td></tr></table></figure><p>这是一个<br>测试</p><hr><h1 id="3-Markdown-引用"><a href="#3-Markdown-引用" class="headerlink" title="3.Markdown 引用"></a>3.<em>Markdown 引用</em></h1><h3 id="要创建块引用，请在段落前添加一个-符号"><a href="#要创建块引用，请在段落前添加一个-符号" class="headerlink" title="要创建块引用，请在段落前添加一个 &gt; 符号"></a>要创建块引用，请在段落前添加一个 &gt; 符号</h3><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用测试</span><br></pre></td></tr></table></figure><blockquote><p>引用测试</p></blockquote><h3 id="多个段落的块引用在句子前面添加多个-符号"><a href="#多个段落的块引用在句子前面添加多个-符号" class="headerlink" title="多个段落的块引用在句子前面添加多个 &gt; 符号"></a>多个段落的块引用在句子前面添加多个 &gt; 符号</h3><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用测试01</span><br><span class="line">&gt;</span><br><span class="line">&gt;引用测试02</span><br><span class="line">&gt;引用测试03</span><br></pre></td></tr></table></figure><blockquote><p>引用测试01</p><p>引用测试02<br>引用测试03</p></blockquote><h3 id="嵌套块引用块引用可以嵌套。在要嵌套的段落前添加一个-符号"><a href="#嵌套块引用块引用可以嵌套。在要嵌套的段落前添加一个-符号" class="headerlink" title="嵌套块引用块引用可以嵌套。在要嵌套的段落前添加一个 &gt;&gt; 符号"></a>嵌套块引用块引用可以嵌套。在要嵌套的段落前添加一个 &gt;&gt; 符号</h3><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;嵌套引用测试01</span><br><span class="line">&gt;&gt;嵌套引用测试内嵌</span><br><span class="line">&gt;嵌套引用测试02</span><br></pre></td></tr></table></figure><blockquote><p>嵌套引用测试</p><blockquote><p>嵌套引用测试内嵌<br>嵌套引用测试02</p></blockquote></blockquote><hr><h1 id="4-Markdown-列表"><a href="#4-Markdown-列表" class="headerlink" title="4.Markdown 列表"></a>4.Markdown 列表</h1><h3 id="列表分为有序和无序"><a href="#列表分为有序和无序" class="headerlink" title="列表分为有序和无序"></a>列表分为有序和无序</h3><h4 id="有序列表-要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字-1-起始。"><a href="#有序列表-要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字-1-起始。" class="headerlink" title="有序列表:要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。"></a>有序列表:<br>要创建<strong>有序列表</strong>，请在每个列表项前添加<em>数字</em>并<em>紧跟一个英文句点</em>。<br>数字<em>不必按数学顺序排列</em>，但是列表应当以<em>数字 1 起始</em>。</h4><p>如：<br><strong>数字顺序排序</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 列表1</span><br><span class="line">2. 列表2</span><br><span class="line">3. 列表3</span><br><span class="line">4. 列表4</span><br></pre></td></tr></table></figure><ol><li>列表1</li><li>列表2</li><li>列表3</li><li>列表4<br></li></ol><p><strong>数字重复排序</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 列表1</span><br><span class="line">1. 列表2</span><br><span class="line">1. 列表3</span><br><span class="line">1. 列表4</span><br></pre></td></tr></table></figure><ol><li>列表1</li><li>列表2</li><li>列表3</li><li>列表4<br></li></ol><p><strong>数字无序排序</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 列表1</span><br><span class="line">3. 列表2</span><br><span class="line">2. 列表3</span><br><span class="line">5. 列表4</span><br></pre></td></tr></table></figure><ol><li>列表1</li><li>列表2</li><li>列表3</li><li>列表4</li></ol><h4 id="无序列表要创建无序列表，请在每个列表项前面添加破折号-、星号-或加号-。缩进一个或多个列表项可创建嵌套列表。"><a href="#无序列表要创建无序列表，请在每个列表项前面添加破折号-、星号-或加号-。缩进一个或多个列表项可创建嵌套列表。" class="headerlink" title="无序列表要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+)。缩进一个或多个列表项可创建嵌套列表。"></a>无序列表<br>要创建<strong>无序列表</strong>，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+)。缩进一个或多个列表项可创建嵌套列表。</h4><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 列表一</span><br><span class="line">* 列表二</span><br><span class="line">+ 列表三</span><br><span class="line">&gt; 嵌套列表</span><br><span class="line">&gt;&gt;- 列表四</span><br></pre></td></tr></table></figure><ul><li>列表一</li></ul><ul><li>列表二</li></ul><ul><li>列表三<blockquote><p>嵌套列表</p><blockquote><ul><li>列表四</li></ul></blockquote></blockquote></li></ul><hr><h1 id="5-Markdown-代码语法"><a href="#5-Markdown-代码语法" class="headerlink" title="5.Markdown 代码语法"></a>5.Markdown 代码语法</h1><h3 id="单词或短语表示为代码，请将其包裹在反引号-中"><a href="#单词或短语表示为代码，请将其包裹在反引号-中" class="headerlink" title="单词或短语表示为代码，请将其包裹在反引号 (&#96;) 中."></a>单词或短语表示为代码，请将其包裹在反引号 (&#96;) 中.</h3><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`help`是帮助指令</span><br></pre></td></tr></table></figure><p><code>help</code>是帮助指令、</p><h3 id="如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号-中。"><a href="#如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号-中。" class="headerlink" title="如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(&#96;&#96;)中。"></a>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(&#96;&#96;)中。</h3><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">``我需要 `help` 帮助指令``</span><br></pre></td></tr></table></figure><p><code>我需要 `help` 来帮助我</code></p><hr><h1 id="6-Markdown-链接"><a href="#6-Markdown-链接" class="headerlink" title="6.Markdown 链接"></a>6.Markdown 链接</h1><h3 id="链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。超链接Markdown语法代码：-超链接显示名-超链接地址-超链接title"><a href="#链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。超链接Markdown语法代码：-超链接显示名-超链接地址-超链接title" class="headerlink" title="链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。超链接Markdown语法代码：[超链接显示名](超链接地址 &quot;超链接title&quot;)"></a>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。<br>超链接Markdown语法代码：<code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code></h3><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个链接 [Markdown语法](http://localhost:4000/project/posts/ff05b5bf.html)。</span><br></pre></td></tr></table></figure><p>这是一个链接 <a href="http://localhost:4000/project/posts/ff05b5bf.html">Markdown语法</a>。</p><h4 id="给链接增加-Title-链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。"><a href="#给链接增加-Title-链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。" class="headerlink" title="给链接增加 Title 链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。"></a>给链接增加 <strong>Title</strong> <br>链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。</h4><p>如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个链接 [Markdown语法](http://localhost:4000/project/posts/ff05b5bf.html&quot;我的第一篇博客&quot;)</span><br></pre></td></tr></table></figure><p>这是一个链接 <a href="http://localhost:4000/project/posts/ff05b5bf.html%22%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%22">Markdown语法</a></p><h3 id="使用尖括号可以很方便地把URL或者email地址变成可点击的链接"><a href="#使用尖括号可以很方便地把URL或者email地址变成可点击的链接" class="headerlink" title="使用尖括号可以很方便地把URL或者email地址变成可点击的链接"></a>使用尖括号可以很方便地把URL或者email地址变成可点击的链接</h3><p>如；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;xiaofulihao.github.io&gt;</span><br><span class="line">&lt;fake@qq.com&gt;</span><br></pre></td></tr></table></figure><p>&lt;xiaofulihao.github.io&gt;<br><a href="mailto:&#x66;&#97;&#107;&#x65;&#x40;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;">&#x66;&#97;&#107;&#x65;&#x40;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;</a></p><h1 id="引用链接具体语法见Markdiwn基础语法之Markdown链接"><a href="#引用链接具体语法见Markdiwn基础语法之Markdown链接" class="headerlink" title="引用链接具体语法见Markdiwn基础语法之Markdown链接"></a>引用链接具体语法见<a href="https://markdown.com.cn/basic-syntax/links.html">Markdiwn基础语法之Markdown链接</a></h1><hr><h1 id="7-Markdown-图片"><a href="#7-Markdown-图片" class="headerlink" title="7.Markdown 图片"></a>7.Markdown 图片</h1><h3 id="要添加图像，请使用感叹号-然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。插入图片Markdown语法代码：-图片alt-图片链接-图片title-。"><a href="#要添加图像，请使用感叹号-然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。插入图片Markdown语法代码：-图片alt-图片链接-图片title-。" class="headerlink" title="要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。插入图片Markdown语法代码：![图片alt](图片链接 &quot;图片title&quot;)。"></a>要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。<br>插入图片Markdown语法代码：<code>![图片alt](图片链接 &quot;图片title&quot;)。</code></h3><p>如：<br><strong>图片大小有限制</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片语法测试](https://vip.helloimg.com/images/2023/10/18/o22nYP.jpg)</span><br></pre></td></tr></table></figure><p><img src="https://vip.helloimg.com/images/2023/10/18/o22nYP.jpg" alt="图片语法测试"></p><h4 id="链接图片给图片增加链接，请将图像的Markdown-括在方括号中，然后将链接添加在圆括号中。代码-图片alt-图片链接-跳转链接"><a href="#链接图片给图片增加链接，请将图像的Markdown-括在方括号中，然后将链接添加在圆括号中。代码-图片alt-图片链接-跳转链接" class="headerlink" title="链接图片给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。代码[![图片alt](图片链接)](跳转链接)"></a>链接图片<br>给图片增加链接，请将图像的Markdown 括在方括号中，然后将链接添加在圆括号中。<br>代码<code>[![图片alt](图片链接)](跳转链接)</code></h4><p>如；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[![图片测试](https://vip.helloimg.com/images/2023/10/18/o22nYP.jpg)](xiaofulihao.github.io)</span><br></pre></td></tr></table></figure><p><a href="xiaofulihao.github.io"><img src="https://vip.helloimg.com/images/2023/10/18/o22nYP.jpg" alt="图片测试"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;hexo博客语法是Markdown的语法&quot;&gt;&lt;a href=&quot;#hexo博客语法是Markdown的语法&quot; class=&quot;headerlink&quot; title=&quot;hexo博客语法是Markdown的语法&quot;&gt;&lt;/a&gt;&lt;em&gt;hexo博客&lt;/em&gt;语法是&lt;em&gt;Mark</summary>
      
    
    
    
    
    <category term="hexo,记录" scheme="https://xiaofulihao.github.io/tags/hexo-%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
